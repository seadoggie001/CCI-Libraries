{
  "conditions": {
    "GetRandomElementOfArray": {
      "conditions": [
        {
          "variableName": "array",
          "variableOutputName": "randomArray",
          "type": "arrayExplode"
        },
        {
          "value1": "0",
          "value2": "$randomArrayLength",
          "variableName": "randomNumber",
          "type": "randomNumber"
        },
        {
          "calc": "-",
          "value1": "randomNumber",
          "value2": "0",
          "variableName": "randomNumber",
          "type": "math"
        },
        {
          "calc": "floor",
          "value1": "randomNumber",
          "value2": "0",
          "variableName": "randomNumber",
          "type": "math"
        },
        {
          "variableName": "randomElement",
          "variableInput": "$randomArray$randomNumber",
          "type": "variableInsert"
        }
      ],
      "type": "multiple"
    },
    "{loc} processing": {
      "target": "$playerName",
      "horiRadius": "10",
      "vertRadius": "10",
      "tries": "20",
      "variableName": "loc",
      "customHeight": "3",
      "requireSolidBlock": true,
      "type": "freeSpace"
    }
  },
  "outcomes": {
    "CCI Response": {
      "message": "[CCI] $response",
      "type": "chat"
    },
    "Delayed Repeated Command": {
      "events": [
        {
          "constantName": "Delayed Event",
          "conditions": [],
          "outcomes": [],
          "allowsOtherEventsToTrigger": true,
          "playTime": "$dcommand_init"
        }
      ],
      "type": "event"
    },
    "Execute Command": {
      "outcomes": [
        {
          "condition": {
            "conditions": [
              {
                "variableName": "executeAsSelf",
                "variableResult": "true",
                "type": "variableCheck"
              },
              {
                "variableName": "executeAsSelf",
                "variableResult": "1",
                "type": "variableCheck"
              }
            ],
            "any": true,
            "type": "multiple",
            "displayName": "executeAsSelf is True?"
          },
          "outcome": {
            "command": "$command",
            "executeAsSelf": true,
            "type": "command",
            "displayName": "Execute command as self"
          },
          "conditionNotMetOutcome": {
            "command": "$command",
            "type": "command",
            "displayName": "Execute command"
          },
          "type": "conditional",
          "displayName": "Execute command: executeAsSelf"
        },
        {
          "condition": {
            "conditions": [
              {
                "variableName": "commandFeedback",
                "variableResult": "true",
                "type": "variableCheck",
                "displayName": "commandFeedback is True"
              },
              {
                "variableName": "response",
                "variableInput": "Command executed: /$command",
                "type": "variableInsert",
                "displayName": "Build response"
              }
            ],
            "type": "multiple",
            "displayName": "Is commandFeedback true?"
          },
          "outcome": {
            "name": "CCI Response",
            "type": "constant",
            "displayName": "CCI Response"
          },
          "type": "conditional",
          "displayName": "CommandFeedback"
        }
      ],
      "type": "multiple"
    }
  },
  "events": {
    "Delayed Event": {
      "name": "Use Outcome instead",
      "conditions": [],
      "outcomes": [
        {
          "outcomes": [
            {
              "times": "$dcommand_count",
              "outcome": {
                "events": [
                  {
                    "conditions": [
                      {
                        "condition": {
                          "variableName": "dcommand_random",
                          "type": "variableExists"
                        },
                        "passCondition": {
                          "type": "null"
                        },
                        "failCondition": {
                          "variableName": "dcommand_random",
                          "variableInput": "100",
                          "type": "variableInsert"
                        },
                        "type": "conditional",
                        "displayName": "dcommand_random: Default"
                      }
                    ],
                    "outcomes": [
                      {
                        "condition": {
                          "conditions": [
                            {
                              "variableName": "bossbar_value",
                              "variableInput": "$iteCount",
                              "type": "variableInsert"
                            },
                            {
                              "calc": "+",
                              "value1": "1",
                              "value2": "bossbar_value",
                              "variableName": "bossbar_value",
                              "type": "math"
                            }
                          ],
                          "type": "multiple"
                        },
                        "outcome": {
                          "name": "Bossbar set Value",
                          "type": "constant",
                          "displayName": "Bossbar set Value"
                        },
                        "type": "conditional",
                        "displayName": "Bossbar set Value"
                      },
                      {
                        "condition": {
                          "conditions": [
                            {
                              "value1": "0",
                              "value2": "100",
                              "variableName": "dcommand_random_num",
                              "type": "randomNumber"
                            },
                            {
                              "optionalVariableName": "dcommand_random_num",
                              "min": 0.0,
                              "maxVar": "$dcommand_random",
                              "type": "range"
                            }
                          ],
                          "type": "multiple",
                          "displayName": "Check random"
                        },
                        "outcome": {
                          "condition": {
                            "conditions": [
                              {
                                "condition": {
                                  "variableName": "dcommand_array",
                                  "type": "variableExists",
                                  "displayName": "dcommand_array Exists?"
                                },
                                "passCondition": {
                                  "conditions": [
                                    {
                                      "source": "$dcommand_array",
                                      "separator": "|",
                                      "result": "array",
                                      "omitEmptyStrings": true,
                                      "type": "stringSplit"
                                    },
                                    {
                                      "name": "GetRandomElementOfArray",
                                      "type": "constant"
                                    },
                                    {
                                      "variableName": "command",
                                      "variableInput": "$randomElement",
                                      "type": "variableInsert"
                                    }
                                  ],
                                  "type": "multiple",
                                  "displayName": "Get command from array"
                                },
                                "failCondition": {
                                  "variableName": "command",
                                  "variableInput": "$dcommand_command",
                                  "type": "variableInsert",
                                  "displayName": "Get command"
                                },
                                "type": "conditional",
                                "displayName": "Get command..."
                              },
                              {
                                "name": "{loc} processing",
                                "type": "constant",
                                "displayName": "Update loc"
                              },
                              {
                                "source": "$command",
                                "target": "{loc}",
                                "replacement": "$loc",
                                "result": "command",
                                "literal": true,
                                "type": "stringReplace",
                                "displayName": "Replace loc"
                              }
                            ],
                            "type": "multiple",
                            "displayName": "Build command"
                          },
                          "outcome": {
                            "name": "Execute Command",
                            "type": "constant",
                            "displayName": "Execute Command"
                          },
                          "type": "conditional"
                        },
                        "conditionNotMetOutcome": {
                          "message": "random failed :(",
                          "type": "chat",
                          "displayName": "Message for testing random fails",
                          "disabled": true
                        },
                        "type": "conditional"
                      }
                    ],
                    "allowsOtherEventsToTrigger": true,
                    "playTime": "$dcommand_delay"
                  }
                ],
                "type": "event"
              },
              "type": "repeat"
            },
            {
              "condition": {
                "variableName": "dcommand_bossbar",
                "variableResult": "true",
                "type": "variableCheck",
                "displayName": "if dcommand_bossbar"
              },
              "outcome": {
                "outcomes": [
                  {
                    "condition": {
                      "variableName": "bossbar_total",
                      "variableInput": "$dcommand_count",
                      "type": "variableInsert"
                    },
                    "outcome": {
                      "name": "Bossbar Create",
                      "type": "constant",
                      "displayName": "Bossbar Create"
                    },
                    "type": "conditional",
                    "displayName": "Create bossbar"
                  },
                  {
                    "condition": {
                      "conditions": [
                        {
                          "calc": "*",
                          "value1": "dcommand_count",
                          "value2": "dcommand_delay",
                          "variableName": "dcommand_bossbar_delay",
                          "type": "math"
                        },
                        {
                          "calc": "+",
                          "value1": "dcommand_delay",
                          "value2": "dcommand_bossbar_delay",
                          "variableName": "dcommand_bossbar_delay",
                          "type": "math"
                        },
                        {
                          "calc": "+",
                          "value1": "dcommand_init",
                          "value2": "dcommand_bossbar_delay",
                          "variableName": "dcommand_bossbar_delay",
                          "type": "math"
                        }
                      ],
                      "type": "multiple"
                    },
                    "outcome": {
                      "events": [
                        {
                          "conditions": [],
                          "outcomes": [
                            {
                              "name": "Bossbar Destroy",
                              "type": "constant",
                              "displayName": ""
                            }
                          ],
                          "allowsOtherEventsToTrigger": true,
                          "playTime": "1"
                        }
                      ],
                      "type": "event"
                    },
                    "type": "conditional",
                    "displayName": "Destroy Bossbar (delayed)"
                  }
                ],
                "type": "multiple",
                "displayName": "Create & Destroy Bossbar"
              },
              "type": "conditional",
              "displayName": "Setup bossbar if needed"
            }
          ],
          "type": "multiple"
        }
      ],
      "allowsOtherEventsToTrigger": true,
      "playTime": "$dcommand_init"
    }
  }
}